 基础操作：
右击一个文件夹git bash here, “操作命令输入框” 自动进入此文件，然后开始下面命令操作

初始化本地仓库
git init
添加到暂存区
git add .
提交到本地仓库
git commit -m 本次提交描述
关联远程仓库(github上的仓库)
git remote add origin git@github.com:weiline/mynews.git 
推送到远程仓库
git push -u origin master

克隆远程仓库到本地(新项目必须在本地git init初始化文件夹作为存放位置)
git clone https://github.com/weiline/my-weixin.git  新建存放文件名

取回远程仓库的变化 ，并与本地分支合并
git pull [remote]master


分支操作：

创建一个分支
git branch 分支名

检查所有分支（标有*是当前分支）
git branch

切换到新的分支
git checkou 分支名

新建分支并且提到新建分支上
git checkout -b 新建分支名

删除分支（不能删除当前分支）
git branch -d 分支名（前提是要删除的分支不能有过commit提交，也就是内容）

强制删除分支
git branch -D 分支名 (强制删除此分支)

合并分支(当前为主分支状态)
git merge 分支名


修改同一个地方，merge后产生failed，解决分支冲突failed
1 git merge --abort (清除分支代码，保留主分支代码)
2手动编辑冲突代码，然后
git add .
git commit
弹出可编辑代码，输入I写入解决描述文字
esc
:wq
git commit -m 解决冲突之后的代码


查看所有提交记录
git log

git log --oneline (单行简列)

git log --oneline --graph （查看当前的版本路线）

摘取整个远程项目到本地仓库
git fetch

查看所有关联分支
git branch -av

删除别的不用的分支
git push origin --delete 不用的分支名




配置本地第二个人
git config --add --local user.name 新名
git config --add --local user.email 新邮箱

查看配置
git config --local --list

查看本地和远端分支的关联
git branchn -av

创建切入进入新分支，并和远程分支并联
git checkout -b 新分支 远端分支路径(-av 列出的红色分支的路径)

